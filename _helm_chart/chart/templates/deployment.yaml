{{- $defaultSecretName := printf "%s-%s" (include "chart.fullname" .) "postgresql" -}}
{{- $postgresSecretName := .Values.secret.managed | ternary $defaultSecretName .Values.postgresql.auth.existingSecret -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "chart.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: check-db-ready
          image: "postgres:17"
          command: [ 'sh', '-c',
            'until pg_isready -h {{ .Values.postgresql.fullnameOverride }} -p 5432 -d {{ .Values.postgresql.auth.database }}  -U {{ .Values.postgresql.auth.username }} ;
          do echo waiting for database; sleep 10; done;' ]
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: APP_NAME
            value: {{ .Chart.Name | quote }}
          - name: REDIS_HOST
            value: {{ .Values.redis.fullnameOverride | quote }}
          - name: REDIS_PASSWORD
            value: "null"
          - name: REDIS_PORT
            value: "6379"
          - name: DB_CONNECTION
            value: "pgsql"
          - name: DB_HOST
            value: {{ .Values.postgresql.fullnameOverride | quote }}
          - name: DB_PORT
            value: "5432"
          - name: DB_DATABASE
            value: {{ .Values.postgresql.auth.database | quote }}
          - name: DB_USERNAME
            value: {{ .Values.postgresql.auth.username | quote }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $postgresSecretName }}
                key: password
          - name: BROADCAST_DRIVER
            value: "log"
          - name: CACHE_DRIVER
            value: "file"
          - name: QUEUE_CONNECTION
            value: "sync"
          - name: SESSION_DRIVER
            value: "file"
          - name: SESSION_LIFETIME
            value: "120"
          - name: LOG_CHANNEL
            value: "stack"
          - name: MAIL_MAILER
            value: "smtp"
          - name: MAIL_HOST
            value: {{ .Values.smtp.host | quote }}
          - name: MAIL_PORT
            value: {{ .Values.smtp.port | quote }}
          - name: MAIL_USERNAME
            value: {{ .Values.smtp.username | quote }}
          - name: MAIL_PASSWORD
            value: {{ .Values.smtp.password | quote }}
          - name: MAIL_ENCRYPTION
            value: {{ .Values.smtp.encryption | quote }}
          - name: MAIL_FROM_ADDRESS
            value: {{ .Values.smtp.from_address | quote }}
          - name: MAIL_FROM_NAME
            value: {{ .Chart.Name | quote }}
          - name: AWS_ACCESS_KEY_ID
            value: {{ .Values.aws.access_key_id | quote }}
          - name: AWS_SECRET_ACCESS_KEY
            value: {{ .Values.aws.secret_access_key | quote }}
          - name: AWS_DEFAULT_REGION
            value: {{ .Values.aws.default_region | quote }}
          - name: AWS_BUCKET
            value: {{ .Values.aws.bucket | quote }}
          - name: PUSHER_APP_ID
            value: {{ .Values.pusher.app_id | quote }}
          - name: PUSHER_APP_KEY
            value: {{ .Values.pusher.app_key | quote }}
          - name: PUSHER_APP_SECRET
            value: {{ .Values.pusher.app_secret | quote }}
          - name: PUSHER_APP_CLUSTER
            value: {{ .Values.pusher.app_cluster | quote }}
          - name: MIX_PUSHER_APP_KEY
            value: {{ .Values.pusher.app_key | quote }}
          - name: MIX_PUSHER_APP_CLUSTER
            value: {{ .Values.pusher.app_cluster | quote }}
          {{- if .Values.keycloak.enabled }}
          - name: KEYCLOAK
            value: "enabled"
          - name: KEYCLOAK_CLIENT_ID
            value: {{ .Values.keycloak.client_id | quote }}
          - name: KEYCLOAK_CLIENT_SECRET
            value: {{ .Values.keycloak.client_secret | quote }}
          - name: KEYCLOAK_REDIRECT_URI
            value: {{ .Values.keycloak.redirect_uri | quote }}
          - name: KEYCLOAK_BASE_URL
            value: {{ .Values.keycloak.base_url | quote }}
          - name: KEYCLOAK_REALM
            value: {{ .Values.keycloak.realm | quote }}
          {{- else }}
          - name: KEYCLOAK
            value: "disable"
          {{- end }}
          {{- if .Values.ldap.enabled }}
          - name: LDAP_TYPE
            value: {{ .Values.ldap.type | quote }}
          - name: LDAP_LOGGING
            value: {{ .Values.ldap.logging }}
          - name: LDAP_CONNECTION
            value: {{ .Values.ldap.connection | quote }}
          - name: LDAP_HOST
            value: {{ .Values.ldap.host | quote }}
          - name: LDAP_USERNAME
            value: {{ .Values.ldap.username | quote }}
          - name: LDAP_PASSWORD
            value: {{ .Values.ldap.password | quote }}
          - name: LDAP_PORT
            value: {{ .Values.ldap.service.number | quote }}
          - name: LDAP_BASE_DN
            value: {{ .Values.ldap.base_dn | quote }}
          - name: LDAP_TIMEOUT
            value: {{ .Values.ldap.timeout | quote }}
          - name: LDAP_SSL
            value: {{ .Values.ldap.service.ssl }}
          - name: LDAP_TLS
            value: {{ .Values.ldap.service.tls }}
          - name: LDAP_SCOPE
            value: {{ .Values.ldap.scope | quote }}
          - name: LDAP_GROUPS
            value: {{ .Values.ldap.groups | quote }}
          {{- end }}
          - name: APP_DEBUG
            value: {{ .Values.debug | quote }}
          - name: APP_ENV
            value: {{ .Values.environment | quote }}
          - name: APP_KEY
            value: {{ .Values.key | quote }}
          - name: APP_URL
            value: {{ .Values.reverse_proxy | quote }}
          - name: USE_DEMO_DATA
            value: {{ .Values.use_demo_data | quote }}

          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
